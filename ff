#!/bin/bash
usage() {
    cat <<EOF

FFtok - Converts long, horizontal videos to short, vertical videos

Synopsis:
    $(basename $0) [options] [HH:MM:SS(.xxx) HH:MM:SS(.xxx)] input.mp4 [output.mp4]

Options:
    -p Pan camera left/right (defaults to 0)
    -q Quality from 0 to 50 (defaults to 17)
    -r Aspect ratio of output (defaults to 9/16)
    -s Speed of transcoding (defaults to ultrafast, results in larger file size)

EOF
    exit 1
}

pan=0
quality=17
ratio=9/16
speed=ultrafast

# Parse options
while getopts "p:q:r:s:" opt; do
    case $opt in
        p) pan="$OPTARG";;
        q) quality="$OPTARG";;
        r) ratio="$OPTARG";;
        s) speed="$OPTARG";;
        *) usage;;
    esac
done
shift "$((OPTIND-1))"

# Parse arguments
case $# in
    0)
        usage;;
    1)
        input_filename="$1"
        output_filename="${1%.*}"_cropped.mp4
        ;;
    2)
        input_filename="$1"
        output_filename="$2"
        ;;
    3)
        start_ts="$1"
        end_ts="$2"
        input_filename="$3"
        output_filename="${3%.*}"_"$1"-"$2".mp4
        ;;
    4)
        start_ts="$1"
        end_ts="$2"
        input_filename="$3"
        output_filename="$4"
        ;;
esac

# Calculate variables
resolution=3840 # 4K
crop="in_h*$ratio:in_h:0.5*in_w-0.5*out_w+$pan:0"
scale="$(($resolution * $ratio)):$resolution"
[[ -n "$start_ts" ]] && cuts="
       -ss $start_ts
       -i $input_filename
       -ss $start_ts
       -to $end_ts
       -copyts
" || cuts="-i $input_filename"

# Call ffmpeg
ffmpeg $cuts \
       -c:v libx264 \
       -preset "$speed" \
       -crf "$quality" \
       -c:a aac \
       -filter:v "crop=$crop, scale=$scale, format=yuv420p" \
       -movflags +faststart \
       "$output_filename"

# Loop the video
ffplay -loop 0 "$output_filename"
