#!/bin/bash -e
usage() {
    cat <<EOF

FFtok - Converts long, horizontal videos to short, vertical videos

Synopsis:
    $(basename $0) [options] input.mp4 output.mp4

Options:
    -p Pan camera left/right (defaults to 0)
    -q Quality from 0 to 50 (defaults to 17)
    -r Aspect ratio of output (defaults to 9/16)
    -s Speed of transcoding (defaults to ultrafast, results in larger file size)

EOF
    exit 1
}

call() {
    echo "Executing: $@"
    "$@"
}

pan=0
quality=17
ratio=9/16
speed=ultrafast

# Parse options
while getopts "p:q:r:s:" opt; do
    case $opt in
        p) pan="$OPTARG";;
        q) quality="$OPTARG";;
        r) ratio="$OPTARG";;
        s) speed="$OPTARG";;
        *) usage;;
    esac
done
shift "$((OPTIND-1))"

# Parse arguments
if [[ $# -ne 2 ]]
then
   usage
   exit 1
fi

input="$1"
output="$2"

# Calculate variables
out_w=2160
out_h="$((out_w * ${ratio#*/}/${ratio%/*}))"
crop="min(in_h*$ratio\,in_w):in_h:0.5*in_w-0.5*out_w+$pan:0"
scale="$out_w:max($out_h\,in_h*($out_w/in_w))"
pad="ceil($out_w/2)*2:ceil(max($out_h/2\,in_h*($out_w/in_w)/2))*2"

# Call ffmpeg
call ffmpeg -i "$input" \
       -c:v libx264 \
       -preset "$speed" \
       -crf "$quality" \
       -c:a aac \
       -filter:v "crop=$crop,scale=$scale,pad=$pad,format=yuv420p" \
       -movflags +faststart \
       -r 30 \
       "$output"

# Loop the video
ffplay -loop 0 "$output"
